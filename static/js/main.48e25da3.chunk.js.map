{"version":3,"sources":["CasinoService.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","CasinoService","url","axios","get","then","response","data","entry","clr","post","res","console","log","id","number","put","services","Table","props","useState","setValues","arr","pass","inp","lau","ele","prev","inpUT","overflow","width","padding","border","borderradius","i","length","handleSubmit","e","preventDefault","element","target","children","updateEntry","value","style","backgroundColor","className","color","push","fontWeight","paddingLeft","borderBottom","onChange","val","prevState","name","data-clr","onSubmit","make","App","cl","self","parseInt","state","setState","open","createEntry","getEntries","result","entries","karu","bolo","catch","err","handleChange","red","black","chk","bind","newGame","this","startI","eleCB","count","yo","rc","bc","document","getElementById","window","scrollTo","html2canvas","canvas","myImage","toDataURL","link","createElement","download","Date","href","body","appendChild","click","scrollHeight","newGameAPI","lsb","rec","lstTen","clred","j","boxShadow","height","display","maketable","makePrevRunCount","src","type","defaultChecked","onClick","DownloadAsImage","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.48e25da3.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n\n\n\nexport default class CasinoService{\n\n    constructor(){}\n    newGameAPI() {\n        const url = `${API_URL}/api/new`;\n        return axios.get(url).then(response => response.data);\n    }\n\n    getEntries() {\n        const url = `${API_URL}/api/entries/`;\n        return axios.get(url).then(response => response.data);\n    }\n    createEntry(entry, clr){\n        const url = `${API_URL}/api/entries/`;\n        const data = {'number':entry, 'clr':clr}\n        return axios.post(url,data).then((res)=>{\n        \tconsole.log(res)\n        });\n    }\n    updateEntry(id, number){\n        const url = `${API_URL}/api/entries/${id}/${number}`;\n        return axios.put(url);\n    }\n}","import React , { useState } from 'react';\nimport CasinoService from './CasinoService.js';\nimport './App.css';\nimport html2canvas from 'html2canvas'\nconst services = new CasinoService();\n\n\n\n\n\nfunction Modal(props){\n  const { open } = props;\n  if(open){\n    return(\n      <div>\"hehehehe\"</div>\n    )\n  }\n}\n\n\n\nfunction Table(props){\n  const [values, setValues] = useState({})\n  \n  const { arr, clr, pass, lau, inp, prev } = props;\n  const ele = [];\n  const inpUT = {\n    overflow: \"hidden\",\n    width: \"100%\",\n    padding: \"1px\",\n    border: \"0.1px solid #aca0a0\",\n    borderradius: \"5px\",\n  }\n  for(let i=0;i<arr.length;i++){\n    if(arr[i].id>=inp){\n\n    }\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    var element = e.target.children[0];\n    services.updateEntry(element.id, element.value);\n  } \n  function make(){\n    for(let i=0;i<arr.length;i++){\n\n      if(arr[i].number===0){\n        if(inp>=0){\n          if(arr[i].id>=inp){\n             ele.push(\n              <tr>              \n                <td style={{color:\"green\", fontWeight:\"600\", width:\"50px\", padding:\"3px\", paddingLeft:\"15px\", borderBottom: \"1px solid red\" }}>\n                  <input style={inpUT} \n                    onChange={e => \n                                {\n                                const val = e.target.value;\n                                const id=arr[i].number;\n                                arr[i].number = val;\n                                setValues(prevState => {\n                                  return { ...prevState, [id]: val }\n                                });\n                              }\n                            }  \n                    name={arr[i].number} \n                    id={arr[i].id}\n                    data-clr={arr[i].clr} \n                    value={arr[i].number}\n                  />\n                </td>\n              </tr>\n            )\n          } else{ \n            ele.push(\n              <tr>\n                <td style={{color:\"green\", fontWeight:\"600\", width:\"50px\", padding:\"5px\", paddingLeft:\"15px\", borderBottom: \"1px solid white\" }}>{arr[i].number}</td>\n              </tr>\n            )\n          }\n        } else{ \n          ele.push(\n            <tr>\n              <td style={{color:\"green\", fontWeight:\"600\", width:\"50px\", padding:\"5px\", paddingLeft:\"15px\", borderBottom: \"1px solid white\" }}>{arr[i].number}</td>\n            </tr>\n          )\n        }\n      } else {\n        if(inp>=0){\n          if(arr[i].id>=inp){\n            ele.push(          \n              <tr>\n                <td style={{color:\"white\", width:\"50px\", padding:\"3px\", paddingLeft:\"15px\", borderBottom: \"1px solid white\" }}>\n                  <form onSubmit  ={handleSubmit}>\n\n                    <input style={inpUT} \n                      onChange={e => \n                                    {\n                                    const val = e.target.value;\n                                    const id=arr[i].number;\n                                    arr[i].number = val;\n                                    setValues(prevState => {\n                                      return { ...prevState, [id]: val }\n                                    });\n                                  }\n                                }  \n                      name={arr[i].id} \n                      data-clr={arr[i].clr} \n                      id={arr[i].id} \n                      value={arr[i].number}\n                    />\n                  </form>\n                </td>\n              </tr>\n            )\n          } else{ \n            ele.push(\n              <tr>\n                <td style={{color:\"white\", width:\"50px\", padding:\"5px\", paddingLeft:\"15px\", borderBottom: \"1px solid white\"}}>{arr[i].number}</td>\n              </tr>\n            )\n          }\n        }  else{ \n          ele.push(\n            <tr>\n              <td style={{color:\"white\", width:\"50px\", padding:\"5px\", paddingLeft:\"15px\", borderBottom: \"1px solid white\"}}>{arr[i].number}</td>\n            </tr>\n          )\n        }\n      }\n    }\n    return ele;\n  }\n\n\n  return ( \n    <div style={{backgroundColor:clr,border: \"1px solid white\"}} className=\"float-left\">\n      { lau ? <h6 style={{color:\"white\", padding:\"10px\"}}>Pass {pass+1}:</h6>: <h6 style={{color:\"white\", padding:\"10px\"}}>Pass {pass+1}:</h6>}\n      <table className=\"table\">\n        <tbody>\n          { make() }\n        </tbody>\n      </table>\n    </div>\n\n  )\n\n}\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: [],\n      clr: \"red\",\n      entry: null,\n      karu: false,\n      red: [],\n      black: [],\n      chk: 0,\n      open: false,\n      bolo: true\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.newGame = this.newGame.bind(this);\n  }\n\n\n\n  componentDidMount(){\n    var self=this;\n    services.getEntries().then(function (result) {\n        self.setState({ entries:  result, karu:true });\n    });\n  }\n\n  lstTen(entries){\n    var i=0, startI=0, eleCB=0, count=10;\n    if(entries[entries.length-1].length<10){\n      for(i=entries.length-1;i>=0;i--){\n        count-=entries[i].length;\n        if(count<=0){\n\n          startI = i;\n          eleCB = count*-1;\n          break;\n        }\n      }\n    } else {\n      startI = entries.length-1;\n      eleCB = entries[entries.length-1].length-10\n    }\n    return [startI, eleCB, entries[startI][eleCB].id];\n  }\n\n  makePrevRunCount(){\n    const { entries, clr } = this.state;\n    try{\n        var yo = entries[entries.length-2];\n        var rc=0, bc=0;\n          console.log(yo)\n    \n        for(let i=0;i<yo.length;i++){\n          if(yo[i].clr===\"red\"){\n            rc+=1;\n          } else {\n            bc+=1\n          }\n        }\n        return [rc, bc]\n      }\n    catch {\n      return [0,0]\n    }\n  }\n\n  \n  DownloadAsImage() {\n    var element = document.getElementById(\"table\");\n    window.scrollTo(0,0); \n    html2canvas(element).then(function (canvas) {\n      var myImage = canvas.toDataURL();\n      var link = document.createElement(\"a\");\n\n      link.download = \"GamePicture\"+Date()+\".png\";\n      link.href = myImage;\n      document.body.appendChild(link);\n      link.click();\n    });\n    window.scrollTo(0, element.scrollHeight || element.scrollHeight);\n  }\n\n\n  newGame(){\n    services.newGameAPI();\n\n    var self= this;\n    services.getEntries().then(function (result) {\n        self.setState({ entries:  result, karu:true });\n    });\n  }\n\n  maketable(clr){\n    const { entries, chk, bolo } = this.state;\n    var lsb;\n    var prev=0;\n    var rec= {'red':[], 'black': []};\n    lsb = this.lstTen(entries);\n    const ele = [];\n    let clred = [];\n\n    for(let i=0;i<entries.length;i++){\n      for(let j=0;j<entries[i].length;j++){\n        if(entries[i][j]['clr']==clr){\n          clred.push(entries[i][j]);\n        }\n      }\n      try{\n        if(entries[0][0]['clr'] == clred[0]['clr']){\n          \n            ele.push(<Table arr={clred} clr={clr} pass={i} prev={prev} lau={1} inp={lsb[2]}/>)\n             \n        } else {\n          \n            ele.push(<Table arr={clred} clr={clr} pass={i} prev={prev} lau={0} inp={lsb[2]}/>)   \n    \n        }\n      } catch {\n        ele.push(<Table arr={[]} clr={clr} pass={i} prev={prev} lau={1} inp={lsb[2]}/>)\n      }\n      rec[clr].push(clred.length);\n      clred = [];\n    }\n    var yo = entries[entries.length-1][entries[entries.length-1].length-1];\n    if(bolo && rec[clr][rec[clr].length-2]>=4 && rec[clr][rec[clr].length-1]>=2 && yo.clr===clr && yo.clr===this.state.clr){\n      this.setState({bolo: false, open: true})\n    }\n\n\n    return ele;\n  }\n\n  handleSubmit = (e) => {\n    var self=this;\n    e.preventDefault();\n    if(!parseInt(this.state.entry) && parseInt(this.state.entry)!==0){\n      var cl;\n      if(this.state.clr===\"red\"){\n        cl=\"black\";\n      } else {\n        cl=\"red\";\n      }\n      console.log(\"dhkjahfkja\", this.state.entry)\n      this.setState({\n        open: false,  clr:cl\n      });\n    }\n    services.createEntry(this.state.entry, this.state.clr).then((res) => {\n      services.getEntries().then(function (result) {\n          self.setState({ entries:  result, karu:true, entry:'', bolo: true });\n      });\n  }).catch((err)=>console.log(err)) }\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n\n  }\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"navbar-brand\">\n            <h3>EnR- Casino</h3>\n          </div>\n        </nav>\n        <div className=\"container pt-5\">\n        <div className=\"pt-2 pb-2\">\n          <h2 style={{color:\"white\"}}>{Date()}</h2>\n        </div>\n          <div className=\"bg-green bor\">\n            <div className=\"p-5\">\n              <div className=\"\">\n                {\n                  this.state.karu \n                  ? <div className=\"shadow rounded\" id=\"table\" style={{boxShadow: \"10px 10px 10px black\", height:\"100%\"}}>\n                      <div className=\"w-100\" style={{display:\"flex\"}}>\n                        {this.maketable(\"red\")}\n                      </div>\n                      <div className=\"w-100\" style={{display:\"flex\"}}>\n                        {this.maketable(\"black\")}\n                      </div>\n                    </div>\n                  :\n                    <div className=\"container\">\n                      <div className=\"m-auto text-center\">\n                        <i className=\"fa fa-spin fa-spinner fa-4x\"></i>\n                      </div>\n                    </div>\n                }\n              </div>\n            </div>\n            <div className=\"p-5 pt-2\">\n              <div className=\"row\">\n                { this.state.karu ? <div className=\"col-md-6 m-auto\"><h5 className=\"float-left\" style={{color: \"white\"}}> Last Run <i style={{color: \"black\", fontWeight:\"600\"}}>Black Count:</i> {this.makePrevRunCount()[1]} <i style={{color: \"red\", fontWeight:\"600\"}}>, Red Count: </i>{this.makePrevRunCount()[0]}</h5></div> : '' }\n                <div className=\"col-ms-6\">\n                  <img src=\"https://image.flaticon.com/icons/svg/528/528290.svg\" className=\"img-fluid fa-spin\" width=\"100px\"/>\n                </div>\n              </div>\n              <div className=\"bg-white mt-5 p-3 bor2\">\n              { this.state.open\n                  ?\n                  <div>\n                     <form onSubmit={this.handleSubmit} className=\"\">\n                        Next {this.state.clr} bid: <input \n                        type=\"text\"\n                        onChange={this.handleChange}\n                        value={this.state.entry}\n                        name=\"entry\"\n                        />\n                        <button type=\"submit\" className=\"btn btn-primary\">Enter</button><br/>\n                        <small className=\"from-help help\">Type in any character to exit this mode</small>\n\n                      </form>\n                  </div>\n                  :\n                  <form onSubmit={this.handleSubmit} className=\"\">\n                    <input \n                    type=\"number\"\n                    onChange={this.handleChange}\n                    value={this.state.entry}\n                    name=\"entry\"\n                    />\n                    <div className=\"form-group\">\n                      <div onChange={this.handleChange}>\n                        <input type=\"radio\" value=\"red\" defaultChecked name=\"clr\"/>Red\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"black\" name=\"clr\"/>Black\n                      </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Enter</button>\n                  </form>\n              }  \n              <div className=\"pt-2\">\n                <button onClick={this.DownloadAsImage} className=\"btn btn-primary\">Save Record</button>\n                <button onClick={this.newGame} className=\"btn btn-danger\">New Game</button>\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}